;; Variables
(defpoll clock_time :interval "5m" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "10h" "date '+%d/%m'")
(defvar music_reveal false)
(defvar time_rev false)

(defvar eww "$HOME/.nix-profile/bin/eww -c $HOME/.config/eww")

;; (defpoll song :interval "2s"  "~/.config/eww/scripts/music_info --song")
;; (defpoll song_artist :interval "2s"  "~/.config/eww/scripts/music_info --artist")
;; (defpoll current_status :interval "1s"  "~/.config/eww/scripts/music_info --time")
;; (defpoll song_status :interval "2s"  "~/.config/eww/scripts/music_info --status")
;; (defpoll cover_art :interval "2s"  "~/.config/eww/scripts/music_info --cover")

;;;;;;;;;;;;;
;; Windows ;;
(defwindow bar :windowtype "dock"
               :monitor 0
               :exclusive true
               :reserve (struts :distance "4%" :side "top")
               :geometry (geometry :x "0%"
                                   :y "0%"
                                   :width "100%"
                                   :height "10px"
                                   :anchor "top center")
  (bar))

;;;;;;;;;;;;;
;; Widgets ;;
(defwidget bar []
  (box :orientation "h"
    (left)
    (center)
    (right)))

(defwidget left []
  (box :orientation "h"
       :halign "start"
    (tags)))

(defwidget center []
  (box :orientation "h"
       :halign "center"
    (clock)))

(defwidget right []
  (box :orientation "h"
       :halign "end"
    (clock)))

(defwidget tags []
  (box :class "tags"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "riverctl set-focused-tags $((1 << $((1 - 1))))" 1)
    (button :onclick "riverctl set-focused-tags $((1 << $((2 - 1))))" 2)
    (button :onclick "riverctl set-focused-tags $((1 << $((3 - 1))))" 3)
    (button :onclick "riverctl set-focused-tags $((1 << $((4 - 1))))" 4)
    (button :onclick "riverctl set-focused-tags $((1 << $((5 - 1))))" 5)
    (button :onclick "riverctl set-focused-tags $((1 << $((6 - 1))))" 6)
    (button :onclick "riverctl set-focused-tags $((1 << $((7 - 1))))" 7)
    (button :onclick "riverctl set-focused-tags $((1 << $((8 - 1))))" 8)
    (button :onclick "riverctl set-focused-tags $((1 << $((9 - 1))))" 9)))


;; (defwidget music []
;;   (eventbox :onhover "${eww} update music_reveal=true"
;;             :onhoverlost "${eww} update music_reveal=false"
;;     (box :orientation: "h"
;;          :space-evenly: "false"
;;          :vexpand "false"
;;          :hexpand "false"
;;       (box :class "song_cover_art"
;;            :vexpand "false"
;;            :hexpand "false"
;;            :style "background-image: url('${cover_art}');")
;;       (button :class "song"
;;               :wrap "true"
;;               :onclick "~/.config/eww/scripts/pop music" song)
;;       (revealer :transition "slideright"
;;                 :reveal music_reveal
;;                 :duration "350ms"
;;         (box :vexpand "false"
;;              :hexpand "false"
;;              :orientation "h"
;;           (button :class "song_btn_prev"
;;                   :onclick "~/.config/eww/scripts/music_info --prev" "")
;;           (button :class "song_btn_play"
;;                   :onclick "~/.config/eww/scripts/music_info --toggle" song_status)
;;           (button :class "song_btn_next"
;;                   :onclick "~/.config/eww/scripts/music_info --next" ""))))))

(defwidget clock []
  (box :space-evenly "false"
    (label :text clock_time :class "clock_time")
    (label :text ":" :class "clock_separator")
    (label :text clock_minute :class "clock_minute")
   ))
